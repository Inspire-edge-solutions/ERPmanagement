{
  "D:\\erp": {
    "versionSfCore": null,
    "versionFramework": "4.4.18",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "erp-project-1",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "ap-south-1",
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "UserLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/erp-project-1-dev-user"
                    }
                  },
                  "InstitutionLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/erp-project-1-dev-institution"
                    }
                  },
                  "UsersLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/erp-project-1-dev-users"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "erp-project-1",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/erp-project-1-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/erp-project-1-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "erp-project-1",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "UserLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
                        "S3Key": "serverless/erp-project-1/dev/1735798066617-2025-01-02T06:07:46.617Z/erp-project-1.zip"
                      },
                      "Handler": "user.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "erp-project-1-dev-user",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UserLogGroup"
                    ]
                  },
                  "InstitutionLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
                        "S3Key": "serverless/erp-project-1/dev/1735798066617-2025-01-02T06:07:46.617Z/erp-project-1.zip"
                      },
                      "Handler": "institution.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "erp-project-1-dev-institution",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "InstitutionLogGroup"
                    ]
                  },
                  "UsersLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
                        "S3Key": "serverless/erp-project-1/dev/1735798066617-2025-01-02T06:07:46.617Z/erp-project-1.zip"
                      },
                      "Handler": "users.handler",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "erp-project-1-dev-users",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UsersLogGroup"
                    ]
                  },
                  "UserLambdaVersionjhrsWZEQX5FjqxaOSKmKRhC480F52vr2SIkXB9irIOs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UserLambdaFunction"
                      },
                      "CodeSha256": "cR95+kmszblu0XrRQBuqX6Dhh9VIcM2XTTrUPlLNh3Y="
                    }
                  },
                  "InstitutionLambdaVersionUiYddhpoetO4RVJjIZhnxUlNGJ513yuACFG1gXlZI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "InstitutionLambdaFunction"
                      },
                      "CodeSha256": "cR95+kmszblu0XrRQBuqX6Dhh9VIcM2XTTrUPlLNh3Y="
                    }
                  },
                  "UsersLambdaVersionN9Omrf4DfLGlMWcLaewzeqFEUysceo4IrWmxbhFdz8": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UsersLambdaFunction"
                      },
                      "CodeSha256": "cR95+kmszblu0XrRQBuqX6Dhh9VIcM2XTTrUPlLNh3Y="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-erp-project-1",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceUser": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "user",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceInstitution": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "institution",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceUsers": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "users",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodUserAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUser"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UserLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "UserLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodInstitutionAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceInstitution"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "InstitutionLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "InstitutionLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodUsersAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceUsers"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UsersLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "UsersLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1735798057860": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodUserAny",
                      "ApiGatewayMethodInstitutionAny",
                      "ApiGatewayMethodUsersAny"
                    ]
                  },
                  "UserLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UserLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "InstitutionLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "InstitutionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UsersLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UsersLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
                    "Export": {
                      "Name": "sls-erp-project-1-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "UserLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UserLambdaVersionjhrsWZEQX5FjqxaOSKmKRhC480F52vr2SIkXB9irIOs"
                    },
                    "Export": {
                      "Name": "sls-erp-project-1-dev-UserLambdaFunctionQualifiedArn"
                    }
                  },
                  "InstitutionLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "InstitutionLambdaVersionUiYddhpoetO4RVJjIZhnxUlNGJ513yuACFG1gXlZI"
                    },
                    "Export": {
                      "Name": "sls-erp-project-1-dev-InstitutionLambdaFunctionQualifiedArn"
                    }
                  },
                  "UsersLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UsersLambdaVersionN9Omrf4DfLGlMWcLaewzeqFEUysceo4IrWmxbhFdz8"
                    },
                    "Export": {
                      "Name": "sls-erp-project-1-dev-UsersLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-erp-project-1-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "functions": {
              "user": {
                "handler": "user.handler",
                "events": [
                  {
                    "http": {
                      "path": "user",
                      "method": "any",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "erp-project-1-dev-user",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "UserLambdaVersionjhrsWZEQX5FjqxaOSKmKRhC480F52vr2SIkXB9irIOs"
              },
              "institution": {
                "handler": "institution.handler",
                "events": [
                  {
                    "http": {
                      "path": "institution",
                      "method": "any",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "erp-project-1-dev-institution",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "InstitutionLambdaVersionUiYddhpoetO4RVJjIZhnxUlNGJ513yuACFG1gXlZI"
              },
              "users": {
                "handler": "users.handler",
                "events": [
                  {
                    "http": {
                      "path": "users",
                      "method": "any",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "erp-project-1-dev-users",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "UsersLambdaVersionN9Omrf4DfLGlMWcLaewzeqFEUysceo4IrWmxbhFdz8"
              }
            },
            "plugins": [
              "serverless-offline"
            ]
          },
          "configFileDirPath": "D:\\erp",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "D:\\erp",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "erp-project-1",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "ap-south-1",
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "UserLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/erp-project-1-dev-user"
              }
            },
            "InstitutionLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/erp-project-1-dev-institution"
              }
            },
            "UsersLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/erp-project-1-dev-users"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "erp-project-1",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/erp-project-1-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/erp-project-1-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "erp-project-1",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "UserLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
                  "S3Key": "serverless/erp-project-1/dev/1735798066617-2025-01-02T06:07:46.617Z/erp-project-1.zip"
                },
                "Handler": "user.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "erp-project-1-dev-user",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UserLogGroup"
              ]
            },
            "InstitutionLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
                  "S3Key": "serverless/erp-project-1/dev/1735798066617-2025-01-02T06:07:46.617Z/erp-project-1.zip"
                },
                "Handler": "institution.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "erp-project-1-dev-institution",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "InstitutionLogGroup"
              ]
            },
            "UsersLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
                  "S3Key": "serverless/erp-project-1/dev/1735798066617-2025-01-02T06:07:46.617Z/erp-project-1.zip"
                },
                "Handler": "users.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "erp-project-1-dev-users",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UsersLogGroup"
              ]
            },
            "UserLambdaVersionjhrsWZEQX5FjqxaOSKmKRhC480F52vr2SIkXB9irIOs": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UserLambdaFunction"
                },
                "CodeSha256": "cR95+kmszblu0XrRQBuqX6Dhh9VIcM2XTTrUPlLNh3Y="
              }
            },
            "InstitutionLambdaVersionUiYddhpoetO4RVJjIZhnxUlNGJ513yuACFG1gXlZI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "InstitutionLambdaFunction"
                },
                "CodeSha256": "cR95+kmszblu0XrRQBuqX6Dhh9VIcM2XTTrUPlLNh3Y="
              }
            },
            "UsersLambdaVersionN9Omrf4DfLGlMWcLaewzeqFEUysceo4IrWmxbhFdz8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UsersLambdaFunction"
                },
                "CodeSha256": "cR95+kmszblu0XrRQBuqX6Dhh9VIcM2XTTrUPlLNh3Y="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-erp-project-1",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceUser": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "user",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceInstitution": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "institution",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUsers": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "users",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUserAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUser"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UserLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UserLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodInstitutionAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceInstitution"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "InstitutionLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "InstitutionLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUsersAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsers"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UsersLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UsersLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1735798057860": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodUserAny",
                "ApiGatewayMethodInstitutionAny",
                "ApiGatewayMethodUsersAny"
              ]
            },
            "UserLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UserLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "InstitutionLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "InstitutionLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UsersLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UsersLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
              "Export": {
                "Name": "sls-erp-project-1-dev-ServerlessDeploymentBucketName"
              }
            },
            "UserLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UserLambdaVersionjhrsWZEQX5FjqxaOSKmKRhC480F52vr2SIkXB9irIOs"
              },
              "Export": {
                "Name": "sls-erp-project-1-dev-UserLambdaFunctionQualifiedArn"
              }
            },
            "InstitutionLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "InstitutionLambdaVersionUiYddhpoetO4RVJjIZhnxUlNGJ513yuACFG1gXlZI"
              },
              "Export": {
                "Name": "sls-erp-project-1-dev-InstitutionLambdaFunctionQualifiedArn"
              }
            },
            "UsersLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UsersLambdaVersionN9Omrf4DfLGlMWcLaewzeqFEUysceo4IrWmxbhFdz8"
              },
              "Export": {
                "Name": "sls-erp-project-1-dev-UsersLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-erp-project-1-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "user": {
          "handler": "user.handler",
          "events": [
            {
              "http": {
                "path": "user",
                "method": "any",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "erp-project-1-dev-user",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "UserLambdaVersionjhrsWZEQX5FjqxaOSKmKRhC480F52vr2SIkXB9irIOs"
        },
        "institution": {
          "handler": "institution.handler",
          "events": [
            {
              "http": {
                "path": "institution",
                "method": "any",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "erp-project-1-dev-institution",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "InstitutionLambdaVersionUiYddhpoetO4RVJjIZhnxUlNGJ513yuACFG1gXlZI"
        },
        "users": {
          "handler": "users.handler",
          "events": [
            {
              "http": {
                "path": "users",
                "method": "any",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "erp-project-1-dev-users",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "UsersLambdaVersionN9Omrf4DfLGlMWcLaewzeqFEUysceo4IrWmxbhFdz8"
        }
      },
      "plugins": [
        "serverless-offline"
      ]
    },
    "serviceRawFile": "service: erp-project-1\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  region: ap-south-1\r\n\r\nfunctions:\r\n  user:\r\n    handler: user.handler\r\n    events:\r\n      - http:\r\n          path: user\r\n          method: any\r\n  institution:\r\n    handler: institution.handler\r\n    events:\r\n      - http:\r\n          path: institution\r\n          method: any\r\n  users:\r\n    handler: users.handler\r\n    events:\r\n      - http:\r\n          path: users\r\n          method: any\r\n\r\nplugins:\r\n  - serverless-offline",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "9164fae162a93b6a2260db291a0e9626",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "cda91d9e-ae49-4886-9600-5629a44b88d4",
    "orgName": "suhasl",
    "userId": "zRKBQNYZ53lybQmTSC",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "suhasl",
    "subscription": null,
    "userEmail": "lsuhas75@gmail.com",
    "serviceProviderAwsRegion": "ap-south-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "034362065816",
    "projectType": "traditional",
    "versionSf": "4.4.18",
    "serviceProviderAwsCfStackName": "erp-project-1-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:ap-south-1:034362065816:stack/erp-project-1-dev/45456e10-c6d0-11ef-97d0-0aa0784acc8b",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:ap-south-1:034362065816:stack/erp-project-1-dev/45456e10-c6d0-11ef-97d0-0aa0784acc8b",
    "serviceProviderAwsCfStackCreated": "2024-12-30T17:05:29.034Z",
    "serviceProviderAwsCfStackUpdated": "2025-01-02T06:07:13.519Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "UserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:034362065816:function:erp-project-1-dev-user:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-erp-project-1-dev-UserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "InstitutionLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:034362065816:function:erp-project-1-dev-institution:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-erp-project-1-dev-InstitutionLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://47ou9xoh7d.execute-api.ap-south-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-erp-project-1-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-ap-south-1-a1208feb-5a20",
        "ExportName": "sls-erp-project-1-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "UsersLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:ap-south-1:034362065816:function:erp-project-1-dev-users:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-erp-project-1-dev-UsersLambdaFunctionQualifiedArn"
      }
    ]
  }
}